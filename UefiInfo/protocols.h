#ifndef _PROTOCOLS_H_
#define _PROTOCOLS_H_

#include "common.h"

#define PROTO(ProtocolGUID, ProtocolGUIDStr)                                                 \
    {                                                                                        \
        ProtocolGUID, NULL, (CHAR8*)ProtocolGUIDStr, NULL, NULL, NULL, EFI_INVALID_PARAMETER, \
    }

#define SB_PROTO(ProtocolGUID, ProtocolGUIDStr, SbProtocolGUID, SbProtocolGUIDStr)              \
    {                                                                                           \
        ProtocolGUID, SbProtocolGUID, (CHAR8*)ProtocolGUIDStr, (CHAR8*)SbProtocolGUIDStr, NULL, \
            NULL, EFI_INVALID_PARAMETER,                                                        \
    }

enum UEFIINFO_PROTOCOL_INDEX {

    //
    // BOOT MANAGER PROTOCOLS - Chapter 3
    //

    EFI_BOOT_MANAGER_POLICY_PROTOCOL_INDEX,

    //
    // BOOT SERVICES - Chapter 7
    //

    EFI_BOOT_SERVICES_PROTOCOL_INDEX,

    //
    // LOADED IMAGE PROTOCOL - Chapter 9
    //

    EFI_LOADED_IMAGE_PROTOCOL_INDEX,
    EFI_LOADED_IMAGE_DEVICE_PATH_PROTOCOL_INDEX,

    //
    // PROTOCOLS - DEVICE PATH - Chapter 10
    //

    EFI_DEVICE_PATH_PROTOCOL_INDEX,
    EFI_DEVICE_PATH_TO_TEXT_PROTOCOL_INDEX,
    EFI_DEVICE_PATH_FROM_TEXT_PROTOCOL_INDEX,
    EFI_DEVICE_PATH_UTILITIES_PROTOCOL_INDEX,

    //
    // PROTOCOLS - DRIVER BINDING - Chapter 11
    //

    EFI_DRIVER_BINDING_PROTOCOL_INDEX,
    EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL_INDEX,
    EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL_INDEX,
    EFI_DRIVER_DIAGNOSTICS2_PROTOCOL_INDEX,
    EFI_COMPONENT_NAME2_PROTOCOL_INDEX,
    EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL_INDEX,
    EFI_DRIVER_SUPPORTED_EFI_VERSION_PROTOCOL_INDEX,
    EFI_DRIVER_FAMILY_OVERRIDE_PROTOCOL_INDEX,
    EFI_DRIVER_HEALTH_PROTOCOL_INDEX,
    EFI_ADAPTER_INFORMATION_PROTOCOL_INDEX,

    //
    // PROTOCOLS - CONSOLE - Chapter 12
    //

    EFI_SIMPLE_TEXT_INPUT_PROTOCOL_INDEX,
    EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL_INDEX,
    EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL_INDEX,
    EFI_SIMPLE_POINTER_PROTOCOL_INDEX,
    EFI_ABSOLUTE_POINTER_PROTOCOL_INDEX,
    EFI_SERIAL_IO_PROTOCOL_INDEX,
    EFI_GRAPHICS_OUTPUT_PROTOCOL_INDEX,

    //
    // PROTOCOLS - MEDIA ACCESS - Chapter 13
    //

    EFI_LOAD_FILE_PROTOCOL_INDEX,
    EFI_LOAD_FILE2_PROTOCOL_INDEX,
    EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_INDEX,
    EFI_TAPE_IO_PROTOCOL_INDEX,
    EFI_DISK_IO_PROTOCOL_INDEX,
    EFI_DISK_IO2_PROTOCOL_INDEX,
    EFI_BLOCK_IO_PROTOCOL_INDEX,
    EFI_BLOCK_IO2_PROTOCOL_INDEX,
    EFI_BLOCK_IO_CRYPTO_PROTOCOL_INDEX,
    EFI_ERASE_BLOCK_PROTOCOL_INDEX,
    EFI_ATA_PASS_THRU_PROTOCOL_INDEX,
    EFI_STORAGE_SECURITY_COMMAND_PROTOCOL_INDEX,
    EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL_INDEX,
    EFI_SD_MMC_PASS_THRU_PROTOCOL_INDEX,
    EFI_RAM_DISK_PROTOCOL_INDEX,
    EFI_PARTITION_INFO_PROTOCOL_INDEX,
    EFI_NVDIMM_LABEL_PROTOCOL_INDEX,
    EFI_UFS_DEVICE_CONFIG_PROTOCOL_INDEX,

    //
    // PROTOCOLS - PCI BUS - Chapter 14
    //

    EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_INDEX,
    EFI_PCI_IO_PROTOCOL_INDEX,

    //
    // PROTOCOLS - SCSI Driver - Chapter 15
    //

    EFI_SCSI_IO_PROTOCOL_INDEX,
    EFI_EXT_SCSI_PASS_THRU_PROTOCOL_INDEX,

    //
    // PROTOCOLS - iSCSI Driver - Chapter 16
    //

    EFI_ISCSI_INITIATOR_NAME_PROTOCOL_INDEX,

    //
    // PROTOCOLS - USB - Chapter 17
    //

    EFI_USB2_HC_PROTOCOL_INDEX,
    EFI_USB_IO_PROTOCOL_INDEX,
    EFI_USBFN_IO_PROTOCOL_INDEX,
    EFI_USB_INIT_PROTOCOL_INDEX,

    //
    // PROTOCOLS - DEBUGGER - Chapter 18
    //

    EFI_DEBUGPORT_PROTOCOL_INDEX,
    EFI_DEBUG_SUPPORT_PROTOCOL_INDEX,

    //
    // PROTOCOLS - COMPRESSION - Chapter 19
    //

    EFI_DECOMPRESS_PROTOCOL_INDEX,

    //
    // PROTOCOLS - ACPI - Chapter 20
    //

    EFI_ACPI_TABLE_PROTOCOL_INDEX,

    //
    // PROTOCOLS - STRING SERVICES - Chapter 21
    //

    EFI_UNICODE_COLLATION_PROTOCOL_INDEX,
    EFI_REGULAR_EXPRESSION_PROTOCOL_INDEX,

    //
    // PROTOCOLS - BYTE CODE VM - Chapter 22
    //

    //
    // PROTOCOLS - FIRMWARE SERVICES - Chapter 23
    //

    EFI_SYSTEM_RESOURCE_TABLE_INDEX,

    //
    // PROTOCOLS - NETWORK - SNP, PXE, BIS and HTTP Boot - Chapter 24
    //

    EFI_SIMPLE_NETWORK_PROTOCOL_INDEX,
    EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL_INDEX,
    EFI_PXE_BASE_CODE_PROTOCOL_INDEX,
    EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL_INDEX,
    EFI_BIS_PROTOCOL_INDEX,
    EFI_HTTP_BOOT_CALLBACK_PROTOCOL_INDEX,

    //
    // PROTOCOLS - NETWORK - Managed Network - Chapter 25
    //

    EFI_MANAGED_NETWORK_PROTOCOL_INDEX,

    //
    // PROTOCOLS - NETWORK - Bluetooth - Chapter 26
    //

    EFI_BLUETOOTH_HC_PROTOCOL_INDEX,
    EFI_BLUETOOTH_IO_PROTOCOL_INDEX,
    EFI_BLUETOOTH_CONFIG_PROTOCOL_INDEX,
    EFI_BLUETOOTH_ATTRIBUTE_PROTOCOL_INDEX,
    EFI_BLUETOOTH_LE_CONFIG_PROTOCOL_INDEX,

    //
    // PROTOCOLS - NETWORK - VLAN, EAP, Wi-Fi and Supplicant - Chapter 27
    //

    EFI_VLAN_CONFIG_PROTOCOL_INDEX,
    EFI_EAP_PROTOCOL_INDEX,
    EFI_EAP_MANAGEMENT_PROTOCOL_INDEX,
    EFI_EAP_MANAGEMENT2_PROTOCOL_INDEX,
    EFI_EAP_CONFIGURATION_PROTOCOL_INDEX,
    EFI_WIRELESS_MAC_CONNECTION_PROTOCOL_INDEX,
    EFI_WIRELESS_MAC_CONNECTION_II_PROTOCOL_INDEX,
    EFI_SUPPLICANT_PROTOCOL_INDEX,

    //
    // PROTOCOLS - NETWORK - TCP, IP, IPsec, FTP, TLS and Configurations - Chapter 28
    //

    EFI_TCP4_PROTOCOL_INDEX,
    EFI_TCP6_PROTOCOL_INDEX,
    EFI_IP4_PROTOCOL_INDEX,
    EFI_IP4_CONFIG_PROTOCOL_INDEX,
    EFI_IP4_CONFIG2_PROTOCOL_INDEX,
    EFI_IP6_PROTOCOL_INDEX,
    EFI_IP6_CONFIG_PROTOCOL_INDEX,
    EFI_IPSEC_CONFIG_PROTOCOL_INDEX,
    EFI_IPSEC_PROTOCOL_INDEX,
    EFI_IPSEC2_PROTOCOL_INDEX,
    EFI_FTP4_PROTOCOL_INDEX,
    EFI_TLS_PROTOCOL_INDEX,
    EFI_TLS_CONFIGURATION_PROTOCOL_INDEX,

    //
    // PROTOCOLS - NETWORK - ARP, DHCP, DNS, HTTP and REST - Chapter 29
    //

    EFI_ARP_PROTOCOL_INDEX,
    EFI_DHCP4_PROTOCOL_INDEX,
    EFI_DHCP6_PROTOCOL_INDEX,
    EFI_DNS4_PROTOCOL_INDEX,
    EFI_DNS6_PROTOCOL_INDEX,
    EFI_HTTP_PROTOCOL_INDEX,
    EFI_HTTP_UTILITIES_PROTOCOL_INDEX,
    EFI_REST_PROTOCOL_INDEX,
    EFI_REST_EX_PROTOCOL_INDEX,
    EFI_REST_JSON_STRUCTURE_PROTOCOL_INDEX,

    //
    // PROTOCOLS - NETWORK - UDP and MTFTP - Chapter 30
    //

    EFI_UDP4_PROTOCOL_INDEX,
    EFI_UDP6_PROTOCOL_INDEX,
    EFI_MTFTP4_PROTOCOL_INDEX,
    EFI_MTFTP6_PROTOCOL_INDEX,

    //
    // PROTOCOLS - HII - Chapter 34
    //

    EFI_HII_FONT_PROTOCOL_INDEX,
    EFI_HII_FONT_EX_PROTOCOL_INDEX,
    EFI_HII_STRING_PROTOCOL_INDEX,
    EFI_HII_IMAGE_PROTOCOL_INDEX,
    EFI_HII_IMAGE_EX_PROTOCOL_INDEX,
    EFI_HII_IMAGE_DECODER_PROTOCOL_INDEX,
    EFI_HII_FONT_GLYPH_GENERATOR_PROTOCOL_INDEX,
    EFI_HII_DATABASE_PROTOCOL_INDEX,
    EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL_INDEX,
    EFI_HII_CONFIG_ROUTING_PROTOCOL_INDEX,
    EFI_HII_CONFIG_ACCESS_PROTOCOL_INDEX,
    EFI_FORM_BROWSER2_PROTOCOL_INDEX,
    EFI_HII_POPUP_PROTOCOL_INDEX,
    EFI_HII_PACKAGE_LIST_PROTOCOL_INDEX,

    //
    // PROTOCOLS - Secure Technologies - Chapter 37
    //

    EFI_HASH_PROTOCOL_INDEX,
    EFI_HASH2_PROTOCOL_INDEX,
    EFI_KEY_MANAGEMENT_SERVICE_PROTOCOL_INDEX,
    EFI_PKCS7_VERIFY_PROTOCOL_INDEX,
    EFI_RNG_PROTOCOL_INDEX,
    EFI_SMART_CARD_READER_PROTOCOL_INDEX,

    //
    // PROTOCOLS - Secure Technologies - Chapter 38
    //

    EFI_TIMESTAMP_PROTOCOL_INDEX,
    EFI_RESET_NOTIFICATION_PROTOCOL_INDEX,

    //
    // MISCELLANOUS PROTOCOLS
    //

    EFI_SMBIOS_PROTOCOL_INDEX,
    EFI_SHELL_PROTOCOL_INDEX,

    //
    // NON STANDARD PROTOCOLS
    //

    EDKII_VARIABLE_LOCK_PROTOCOL_INDEX,

    EFI_MAX_PROTOCOL_INDEX,
};

typedef struct _PROTOCOL_INFO {
    //
    //  In Parameters
    //

    EFI_GUID* ProtocolGuid;
    EFI_GUID* ServiceBindingProtocolGuid;
    CHAR8* ProtocolName;
    CHAR8* ServiceBindingProtocolName;

    //
    //  Out Parameters
    //

    VOID* Protocol;
    EFI_SERVICE_BINDING_PROTOCOL* ServiceBindingProtocol;
    EFI_STATUS ProtocolStatus;
    EFI_STATUS ServiceBindingProtocolStatus;
    EFI_HANDLE ServiceBindingHandle;
    EFI_HANDLE ChildHandle;
} PROTOCOL_INFO, *PPROTOCOL_INFO;

EFI_STATUS ProtocolGetInfo(IN PPROTOCOL_INFO ProtocolInfo);

EFI_STATUS
ProtocolOpenServiceBinding(IN EFI_HANDLE DeviceHandle,
                           IN EFI_GUID* ServiceBindingProtocolGuid,
                           OUT EFI_SERVICE_BINDING_PROTOCOL** ServiceBindingProtocol);

EFI_STATUS
ProtocolOpenServiceBindingChildProtocol(IN EFI_SERVICE_BINDING_PROTOCOL* ServiceBindingProtocol,
                                        IN EFI_GUID* ProtocolGuid,
                                        OUT VOID** Protocol,
                                        OUT EFI_HANDLE* ProtocolHandle);

extern PROTOCOL_INFO ProtocolArray[EFI_MAX_PROTOCOL_INDEX];
#endif // _PROTOCOLS_H_
